name: Production Release
env:
  IMPORT_SECRET_KEY: ${{ secrets.QUICKCHECK_IMPORT_SECRET_KEY}}
  CUKE_BASE_URL: ${{ secrets.GREEN_DEPLOYMENT_URL }}
on:
  workflow_dispatch:
jobs:
  playwright_green_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            @fortawesome:registry=https://npm.fontawesome.com/
            //npm.fontawesome.com/:_authToken=511A81C5-CF83-49F0-9B43-50835315F8AE

            @salesperformanceint:registry=https://npm.pkg.github.com/
            //npm.pkg.github.com/:_authToken=$GITHUB_TOKEN
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: PNPM install Dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Install Chromium
        run: pnpm exec playwright install chromium
      - name: Run Playwright Test Suite
        run: pnpm run test:cu
  migrate_production_hasura_databases:
    name: Hasura migrations to production
    needs: playwright_green_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Apply hasura migrations EU
        uses: tibotiber/hasura-action@master # use a tagged version instead of master
        with:
          args: migrate apply --database-name quickcheck
        env:
          HASURA_ENDPOINT: "https://hasura-eu.richardsonaccelerate.com/"
          HASURA_ADMIN_SECRET: ${{ secrets.HASURA_ADMIN_SECRET_EU }}
          HASURA_WORKDIR: apps/quick-check/hasura
      - name: Apply hasura metadata EU
        uses: tibotiber/hasura-action@master # use a tagged version instead of master
        with:
          args: metadata apply
        env:
          HASURA_ENDPOINT: "https://hasura-eu.richardsonaccelerate.com/"
          HASURA_ADMIN_SECRET: ${{ secrets.HASURA_ADMIN_SECRET_EU }}
          HASURA_WORKDIR: apps/quick-check/hasura
      - name: Apply hasura migrations US
        uses: tibotiber/hasura-action@master # use a tagged version instead of master
        with:
          args: migrate apply --database-name quickcheck
        env:
          HASURA_ENDPOINT: "https://hasura-us.richardsonaccelerate.com/"
          HASURA_ADMIN_SECRET: ${{ secrets.HASURA_ADMIN_SECRET_US }}
          HASURA_WORKDIR: apps/quick-check/hasura
      - name: Apply hasura metadata US
        uses: tibotiber/hasura-action@master # use a tagged version instead of master
        with:
          args: metadata apply
        env:
          HASURA_ENDPOINT: "https://hasura-us.richardsonaccelerate.com/"
          HASURA_ADMIN_SECRET: ${{ secrets.HASURA_ADMIN_SECRET_US }}
          HASURA_WORKDIR: apps/quick-check/hasura
  merge_to_production:
    needs: migrate_production_hasura_databases
    runs-on: ubuntu-latest
    steps:
      - name: Merge main -> production
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: main
          target_branch: production
          github_token: ${{ secrets.TIMS_GITHUB_TOKEN }}
